1. 임시 토큰을 만들어 확인하기 위해서 MyFilter1에 HttpServletRequest와 HttpServletResponse를 사용한다.      (사진 1번)
    headerAuth의 안에 Authorization을 받은 상태로 sysout을 실행해보면 아직 null이 뜨는 것을 확인할 수 있다.     (사진 2번)

2. 위에서 적은 코드를 post 요청일 경우에만 동작하게 만든다.     (사진 3번)
    코드를 수정한 후, postman에서 post 요청으로 headers의 key 값에 Authorization, value 값에 hello를 적어 send를 해보면 null으로 들어가던 값이 hello로 들어가는 것을 확인할 수 있다.    (사진 4번)

    즉, 조건에 맞는 토큰을 가지고 있는 경우 필터를 거쳐 인증이 되게 만들고, 그렇지 않으면 필터를 거치지 못해 진입하지 못하게 만들 수 있다.

    여기서 post 메핑으로 코드를 수정하고 응답을 요청하게 되면 필터를 거쳐 응답을 받을 수 있다.      (사진 5,6번)

3. 현재는 모든 상황에서 응답을 받을 수 있기 때문에 if 구문을 돌려 조건을 달아준다.      (사진 7번)

    만약, headerAuth에 인증되지 않는 내용이 들어있을 경우, else 구문을 통해 Not authenticated가 출력되며,       (사진 8번)
    유효한 headerAuth가 들어오게 될 경우에는 정상적인 출력을 하게 된다.         (사진 9번)

4. 이 필터는 시큐리티가 동작하기 전에 작동해야하기 때문에 제일 먼저 동작할 수 있도록 SecurityConfig.java의 필터 체인에 걸어준다.

5. 토큰(현재 코드에서는 "kwang")을 만들어줘야 하는데, 토큰을 만드는 시점은 id,password가 정상적으로 들어와 로그인이 완료되는 순간이다.
    이렇게 토큰이 만들어지면 요청을 들어올 때마다 header의 Authorization에 value 값으로 토큰을 가져오게 되고, 이렇게 넘어오게 되는 토큰이 인증을 받을 수 있는지만 검증하면 된다.(RSA, HS256)
